{
    "bubble_sort.md": {
        "id": 0,
        "title": "Bubble Sort (버블정렬)",
        "description": "버블소트는 인접한 요소들을 비교하여 정렬하는 알고리즘입니다.인접한 두개의 요소들을 비교하여 크기가 순서대로 되어있지 않으면 서로 변경합니다.O(n^2)의 시간복잡도를 가지지만 코드가 단순하여 자주 사용됩니다.Bubble Sort 정렬과정",
        "markdown": "bubble_sort.md",
        "path": "algorithm/sort/bubble_sort.md",
        "tags": [
            "algorithm",
            "sort"
        ]
    },
    "heap_sort.md": {
        "id": 1,
        "title": "Heap Sort (힙정렬)",
        "description": "힙 정렬은 비교기반 정렬 알고리즘으로 선택정렬의 향상된 버전으로 볼 수 있습니다.선택정렬과 유사하게 정렬된 영역과 정렬되지 않은 영역으로 나누고 정렬되지 않은 영역의 가장 큰 요소를 추출한 후 정렬된 영역에 삽입합니다.",
        "markdown": "heap_sort.md",
        "path": "algorithm/sort/heap_sort.md",
        "tags": [
            "algorithm",
            "sort"
        ]
    },
    "insertion_sort.md": {
        "id": 2,
        "title": "Insertion Sort (삽입정렬)",
        "description": "삽입정렬은 자료 배열의 모든 요소를 앞에서부터 차례대로 이미 정렬된 배열 부분과 비교하여 자신의 위치를 찾아 삽입함으로써 정렬하는 알고리즘입니다.O(n^2)의 시간복잡도를 가지지만 선택정렬, 버블정렬 알고리즘에 비해 빠릅니다.",
        "markdown": "insertion_sort.md",
        "path": "algorithm/sort/insertion_sort.md",
        "tags": [
            "algorithm",
            "sort"
        ]
    },
    "selection_sort.md": {
        "id": 3,
        "title": "Selection Sort (선택정렬)",
        "description": "선택정렬은 정렬되지 않은 부분에서 가장 최소의 값을 찾아 시작부분에 배치하여 정렬하는 알고리즘입니다.O(n^2)의 시간복잡도를 가지며 알고리즘이 단순하여 메모리가 제한적인 경우에 사용시 성능 상의 이점이 있습니다.Selection Sort 정렬과정",
        "markdown": "selection_sort.md",
        "path": "algorithm/sort/selection_sort.md",
        "tags": [
            "algorithm",
            "sort"
        ]
    },
    "도커_명령어.md": {
        "id": 4,
        "title": "도커 명령어",
        "description": "docker ps 컨테이너 확인docker images 도커 이미지 확인docker top $CONTAINER_ID 컨테이너 내 running process 확인docker build -t $IMAGE_NAME:$TAG . 빌드하기",
        "markdown": "도커_명령어.md",
        "path": "container/docker/도커_명령어.md",
        "tags": [
            "container",
            "docker"
        ]
    },
    "쿠버네티스_명령어.md": {
        "id": 5,
        "title": "쿠버네티스 명령어",
        "description": "1. EVENTkubectl get events --sort-by=.metadata.creationTimestamp 시간순으로 출력kubectl get events --field-selector type=Warning Warning 이벤트만 출력",
        "markdown": "쿠버네티스_명령어.md",
        "path": "container/kubernetes/쿠버네티스_명령어.md",
        "tags": [
            "container",
            "kubernetes"
        ]
    },
    "TDD.md": {
        "id": 6,
        "title": "테스트 주도 개발 (TDD: Test Driven Development)",
        "description": "1. TDD 란?TDD는 매우 짧은 개발 사이클을 반복하는 소프트웨어 개발 프로세스 중 하나입니다. 우선 개발자는 요구되는 새로운 기능에 대한 자동화된 테스트케이스를 작성하고, 그 후에 해당 테스트를 통과하는 가장 최소한의 코드를 작성합니다. 마지막으로 상황에 맞도록 리팩토링합니다.",
        "markdown": "TDD.md",
        "path": "etc/TDD.md",
        "tags": [
            "etc"
        ]
    },
    "WEB_서버와_WAS.md": {
        "id": 7,
        "title": "WEB 서버와 WAS",
        "description": "WEB 서버WEB 서버는 클라이언트로 부터 HTTP요청을 받아들이고 반응하는 역할을 한다.주로 정적 컨텐츠(이미지, 비디오, HTML)를 서비스한다.대표적으로 Apache, Nginx가 있다.WAS (Web Application Server)",
        "markdown": "WEB_서버와_WAS.md",
        "path": "etc/WEB_서버와_WAS.md",
        "tags": [
            "etc"
        ]
    },
    "메소드_체이닝.md": {
        "id": 8,
        "title": "메소드 체이닝 (Method Chaining)",
        "description": "OOP에서 여러 메소드를 이어서 호출하는 문법입니다.메소드가 객체(this)를 반환하여 여러 메소드를 순차적으로 선언할 수 있도록 합니다.메소드 체이닝을 이용하면 코드가 간결해져 하나의 문장처럼 읽히게 할 수 있다는 장점이 있고 장기적으로는 유지보수에 도움이 됩니다.",
        "markdown": "메소드_체이닝.md",
        "path": "etc/메소드_체이닝.md",
        "tags": [
            "etc"
        ]
    },
    "콘솔_창_없이_배치파일_실행.md": {
        "id": 9,
        "title": "콘솔 창 없이 배치 파일 실행",
        "description": "run.vbsSet oShell = CreateObject(\"Wscript.Shell\")Dim strArgsstrArgs = \"cmd /c file_name.bat\"oShell.Run strArgs, 0, false",
        "markdown": "콘솔_창_없이_배치파일_실행.md",
        "path": "etc/콘솔_창_없이_배치파일_실행.md",
        "tags": [
            "etc"
        ]
    },
    "자가_서명_인증서_생성.md": {
        "id": 10,
        "title": "자가 서명 인증서 생성",
        "description": "인증서는 개인키 소유자의 공개키(public key)에 인증기관의 개인키(private key)로 전자서명한 데이터입니다.모든 인증서는 발급기관(Certificate Authority: CA)가 있어야 하지만 자가 서명 인증서는 서명해줄 상위 인증기관이 없으므로 개인키로 스스로 서명하여 인증서를 만듭니다.",
        "markdown": "자가_서명_인증서_생성.md",
        "path": "etc/인증서/자가_서명_인증서_생성.md",
        "tags": [
            "etc",
            "인증서"
        ]
    },
    "정규표현식.md": {
        "id": 11,
        "title": "정규표현식 (Regular Expression)",
        "description": "정규 표현식은 특정한 규칙을 가진 문자열의 집합을 표현하는 데 사용하는 형식 언어이다.정규 표현식은 많은 텍스트 편집기와 프로그래밍 언어에서 문자열의 검색과 치환을 위해 지원하고 있다.정규표현식 문법* .(dot): 1개의 문자",
        "markdown": "정규표현식.md",
        "path": "etc/정규표현식/정규표현식.md",
        "tags": [
            "etc",
            "정규표현식"
        ]
    },
    "덤프파일_생성방법.md": {
        "id": 12,
        "title": "덤프파일 생성방법",
        "description": "Heap dumpjmap은 JVM 프로세스의 heap 덤프를 생성하는 명령어이다.jmap -dump:format=b,file=`hostname`_dump.hprof $pidThread dumpjstack은 JVM 프로세스의 thread 덤프를 생성하는 명령어이다.",
        "markdown": "덤프파일_생성방법.md",
        "path": "etc/트러블슈팅/덤프파일_생성방법.md",
        "tags": [
            "etc",
            "트러블슈팅"
        ]
    },
    "트러블_슈팅_툴.md": {
        "id": 13,
        "title": "트러블 슈팅 툴",
        "description": "GC- [GCViewer](https://github.com/chewiebug/GCViewer)- [IBM GC Analyzer](https://www.ibm.com/support/pages/ibm-pattern-modeling-and-analysis-tool-java-garbage-collector-pmat)",
        "markdown": "트러블_슈팅_툴.md",
        "path": "etc/트러블슈팅/트러블_슈팅_툴.md",
        "tags": [
            "etc",
            "트러블슈팅"
        ]
    },
    "du_명령어.md": {
        "id": 14,
        "title": "du 명령어",
        "description": "du는 디렉토리별 디스크 사용량을 알 수 있는 명령어입니다.사용법du [OPTION] [FILE]-a : 디렉토리 + 모든 파일들의 사용량 표시-s : 용량의 합계를 보여줌-h : 사람이 보기 편한 포멧으로 보여줌 (e.g., 1K 234M 2G)",
        "markdown": "du_명령어.md",
        "path": "linux/du_명령어.md",
        "tags": [
            "linux"
        ]
    },
    "find_명령어.md": {
        "id": 15,
        "title": "find 명령어",
        "description": "find 명령어는 리눅스에서 파일 및 디렉토리를 검색할 때 사용하는 명령어입니다.여러 옵션(type,perm,name,mtime...)을 이용하여 원하는 파일을 검색할 수 있고 exec 옵션을 사용하여 검색한 파일을 제어할 수 있습니다.",
        "markdown": "find_명령어.md",
        "path": "linux/find_명령어.md",
        "tags": [
            "linux"
        ]
    },
    "logrotate.md": {
        "id": 16,
        "title": "logrotate",
        "description": "logroate는 로그를 관리하는 도구입니다./etc/logrotate.conf 또는 /etc/logrotate.d/* 에 설정합니다.logrotate 옵션- daily, weekly, monthy, yearly => 매일, 매주, 매달, 매년 시행",
        "markdown": "logrotate.md",
        "path": "linux/logrotate.md",
        "tags": [
            "linux"
        ]
    },
    "scp_명령어.md": {
        "id": 17,
        "title": "SCP 명령어",
        "description": "scp(secure copy)는 ssh 통신을 이용한 파일 전송 명령어입니다.사용법scp file user@host:/path/to/file 리모트 서버로 파일 전송scp user@host:/path/to/file /local/path/to/file 리모트 서버에서 파일 가져오기",
        "markdown": "scp_명령어.md",
        "path": "linux/scp_명령어.md",
        "tags": [
            "linux"
        ]
    },
    "sudo_패스워드_없이_사용.md": {
        "id": 18,
        "title": "sudo 패스워드없이 사용",
        "description": "리눅스에서 sudo를 패스워드없이 사용하는 방법입니다.root 계정으로 /etc/sudoers.d/[사용자명] 파일에 아래 내용을 추가합니다.아래 예제에서 NOPASSWD: 를 빼면 sudo 권한만 부여 (sudo 실행시 패스워드 입력필요)",
        "markdown": "sudo_패스워드_없이_사용.md",
        "path": "linux/sudo_패스워드_없이_사용.md",
        "tags": [
            "linux"
        ]
    },
    "TOP_명령어.md": {
        "id": 19,
        "title": "top 명령어",
        "description": "실시간으로 리눅스의 CPU, MEM 사용량을 체크할 수 있는 도구입니다.사용법top <옵션>top 옵션* -a : 메모리 사용에 따라 정렬* -b : 배치 모드에서 시작* -c : 명령어 대신 명령어 라인을 보여줌* -d : 업데이트 간격을 조정",
        "markdown": "TOP_명령어.md",
        "path": "linux/TOP_명령어.md",
        "tags": [
            "linux"
        ]
    },
    "ulimit_명령어.md": {
        "id": 20,
        "title": "ulimit",
        "description": "ulimit은 프로세스의 자원 한도를 설정하는 명령어입니다.ulimit에는 soft한도와 hard한도가 있습니다.- soft한도: 새로운 프로그램을 생성하면 기본으로 적용되는 한도- hard한도: 소프트 한도에서 최대로 늘릴 수 있는 한도 (슈퍼유저에 의해서만 조정가능)",
        "markdown": "ulimit_명령어.md",
        "path": "linux/ulimit_명령어.md",
        "tags": [
            "linux"
        ]
    },
    "vi_텍스트_변경.md": {
        "id": 21,
        "title": "vi 텍스트 변경",
        "description": "vi에서 해당 텍스트를 찾아 변경하는 방법이다. (orgin_text -> replace_text):%s/{origin_text}/{replace_text}",
        "markdown": "vi_텍스트_변경.md",
        "path": "linux/vi_텍스트_변경.md",
        "tags": [
            "linux"
        ]
    },
    "리눅스_노트북_덮개_영향_없애기.md": {
        "id": 22,
        "title": "리눅스 노트북 덮개 영향 없애기",
        "description": "리눅스에서 노트북의 덮개를 닫았을 때 동작하지 않는 현상을 없애는 방법입니다.아래 명령어를 입력하여 /etc/systemd/logind.conf 파일을 열어줍니다.sudo vi /etc/systemd/logind.conf",
        "markdown": "리눅스_노트북_덮개_영향_없애기.md",
        "path": "linux/리눅스_노트북_덮개_영향_없애기.md",
        "tags": [
            "linux"
        ]
    },
    "사용자_그룹_추가_및_삭제.md": {
        "id": 23,
        "title": "사용자 그룹 추가 및 삭제",
        "description": "사용자 그룹을 생성하여 사용자들을 하나의 그룹으로 소속되게 할 수 있습니다.그룹에 속한 사용자들은 특정 권한을 가지고 있어 파일이나 폴더등을 공유할 수 있습니다.그룹 추가groupadd명령어를 사용하여 그룹을 생성할 수 있습니다.",
        "markdown": "사용자_그룹_추가_및_삭제.md",
        "path": "linux/사용자_그룹_추가_및_삭제.md",
        "tags": [
            "linux"
        ]
    },
    "압축_명령어.md": {
        "id": 24,
        "title": "압축 명령어",
        "description": "tartar의 옵션* -c : 파일을 tar로 묶음* -p : 파일 권한 확장* -v : 압축하거나 해제할 때 과정을 출력* -f : 파일 이름을 지정* -C : 경로를 지정* -x : tar 압축 풀기* -z : gzip으로 압축하거나 해제함",
        "markdown": "압축_명령어.md",
        "path": "linux/압축_명령어.md",
        "tags": [
            "linux"
        ]
    },
    "우분투_인증서_설치.md": {
        "id": 25,
        "title": "ubuntu 인증서 설치",
        "description": "프록시를 사용하는 환경에서 https 프로토콜을 이용할 때 인증오류가 나는 경우가 있다.프록시 환경을 위해 제공되는 ca-certificates 파일을 적용하여 해결할 수 있다.인증서 설치 순서/usr/share/ca-certificates에 폴더를 하나 만든다.",
        "markdown": "우분투_인증서_설치.md",
        "path": "linux/우분투_인증서_설치.md",
        "tags": [
            "linux"
        ]
    },
    "HTTP_GET과_POST.md": {
        "id": 26,
        "title": "HTTP GET과 POST",
        "description": "GET과 POST는 가장 흔이 쓰이는 HTTP 메소드로 클라이언트에서 서버로 요청을 할 때 사용합니다.GETGET 방식은 서버로부터 정보를 **조회**하기 위해 설계된 메소드입니다.GET 방식은 요청하는 데이터가 URL에 담겨서 전송됩니다. (URL상 ?뒤 key, value로 쌍을 이루는 QueryString이 포함됨)",
        "markdown": "HTTP_GET과_POST.md",
        "path": "network/HTTP_GET과_POST.md",
        "tags": [
            "network"
        ]
    },
    "nmap_명령어.md": {
        "id": 27,
        "title": "nmap 명령어",
        "description": "nmap은 호스트나 네트워크를 스캐닝 할 때 사용하는 port scanning tool입니다.nmap을 이용하여 방화벽이 오픈되어있는지 확인할 수 있습니다.사용법nmap <옵션> <호스트>* -sT: TCP open scan",
        "markdown": "nmap_명령어.md",
        "path": "network/nmap_명령어.md",
        "tags": [
            "network"
        ]
    },
    "SSH_포트포워딩.md": {
        "id": 28,
        "title": "SSH 포트포워딩",
        "description": "포트포워딩은 하나의 IP 주소와 포트 번호 결합의 통신 요청을 다른 곳으로 넘겨주는 네트워크 주소 변환(NAT)의 응용입니다. (위키피디아 참조)SSH 포트포워딩은 SSH 서버를 Proxy처럼 활용하여 터널링(tunneling)이라고도 부르며 통신시 SSH를 이용하기 때문에 통신내용이 암호화되어 전송됩니다.",
        "markdown": "SSH_포트포워딩.md",
        "path": "network/SSH_포트포워딩.md",
        "tags": [
            "network"
        ]
    },
    "flask_파일_업로드.md": {
        "id": 29,
        "title": "flask 파일 업로드",
        "description": "flask를 이용하여 서버에 파일을 업로드 하는 방법을 정리하였습니다.upload_main()은 파일 업로드를 위한 html를 렌더링합니다.upload_files()은 서버에 파일을 업로드하는 역할을 합니다.사용자가 서버의 파일시스템이 있는 파일을 수정하는 것을 방지하기 위해 secure_filename()를 사용합니다.",
        "markdown": "flask_파일_업로드.md",
        "path": "python/flask_파일_업로드.md",
        "tags": [
            "python"
        ]
    },
    "json에서_dictionary로_변환하는_방법.md": {
        "id": 30,
        "title": "json에서 dictionary로 변환하는 방법",
        "description": "파이썬에서 dictionary를 json를 변환하거나 json을 dictionary로 변환해야하는 경우가 있습니다.json 라이브러리의 loads와 dumps를 이용하여 dictionary와 json간의 변환이 가능합니다.",
        "markdown": "json에서_dictionary로_변환하는_방법.md",
        "path": "python/json에서_dictionary로_변환하는_방법.md",
        "tags": [
            "python"
        ]
    },
    "md5_checksum_구하는_방법.md": {
        "id": 31,
        "title": "python에서 md5 checksum 구하는 방법",
        "description": "파일을 전송, 다운로드할 때 파일의 무결성을 확인해야 하는 경우가 생긴다.python으로 file의 md5 checksum을 구하는 방법을 정리해보았다.file md5 checksum 소스코드아래의 코드를 실행하면 /path/to/file의 hash값을 얻을 수 있다.",
        "markdown": "md5_checksum_구하는_방법.md",
        "path": "python/md5_checksum_구하는_방법.md",
        "tags": [
            "python"
        ]
    },
    "REST_API_호출.md": {
        "id": 32,
        "title": "REST API 호출",
        "description": "파이썬의 requests, urllib 모듈을 사용하여 REST API 호출하는 방법을 정리하였습니다.※ requests는 Apache License 2.0의 라이센스를 가진 python HTTP 라이브러리 ([requests 공식문서](https://requests.readthedocs.io/en/latest/))",
        "markdown": "REST_API_호출.md",
        "path": "python/REST_API_호출.md",
        "tags": [
            "python"
        ]
    },
    "scp를_이용한_파일전송.md": {
        "id": 33,
        "title": "scp를 이용한 파일전송",
        "description": "python의 paramiko와 scp라이브러리를 사용하여 파일전송이 가능합니다.라이브러리 설치scp 전송을 위해 사용될 paramiko, scp 라이브러리를 설치합니다.pip install paramikopip install scp",
        "markdown": "scp를_이용한_파일전송.md",
        "path": "python/scp를_이용한_파일전송.md",
        "tags": [
            "python"
        ]
    },
    "shell_명령어_실행.md": {
        "id": 34,
        "title": "Shell 명령어 실행법",
        "description": "Python에서 Shell 명령어를 실행하고 싶을 때가 있습니다.파이썬의 subprocess를 활용하여 shell 명령어 실행하는 예제코드를 작성해보았습니다.※ subprocess는 새로운 프로세스를 생성하여 input/output/error pipes와 연결을 제공하는 파이썬의 모듈",
        "markdown": "shell_명령어_실행.md",
        "path": "python/shell_명령어_실행.md",
        "tags": [
            "python"
        ]
    },
    "text_hash_값_구하기.md": {
        "id": 35,
        "title": "text hash 값 구하기",
        "description": "python의 hashlib를 이용하여 여러 hash 알고리즘(md5,sha1,sha224,sha256,sha384,sha512,...)에 매칭되는 hash 값을 얻을 수 있습니다.아래에 hashlib의 hash 함수를 이용한 hash값 생성 예제코드를 작성해보았습니다.",
        "markdown": "text_hash_값_구하기.md",
        "path": "python/text_hash_값_구하기.md",
        "tags": [
            "python"
        ]
    },
    "wget_사용법.md": {
        "id": 36,
        "title": "Python wget 사용법",
        "description": "Python에서 wget을 사용하는 방법입니다.wget 라이브러리 설치먼저 wget을 사용하기 위해 python wget 라이브러리를 설치합니다.pip install wgetwget으로 다운로드wget를 import하고 wget.download를 사용하여 다운로드 받을 수 있습니다.",
        "markdown": "wget_사용법.md",
        "path": "python/wget_사용법.md",
        "tags": [
            "python"
        ]
    },
    "Hook.md": {
        "id": 37,
        "title": "Hook",
        "description": "Hook은 React 16.8버전에 새로 추가되었습니다.Hook은 함수 컴포넌트에서 React 상태와 생명주기 기능을 연동 할 수 있게 해주는 함수입니다.Hook을 이용하여 Class 작성없이 함수형 컴포넌트에서도 상태를 관리할 수 있습니다.",
        "markdown": "Hook.md",
        "path": "react/Hook.md",
        "tags": [
            "react"
        ]
    }
}