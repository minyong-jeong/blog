{"version":3,"sources":["components/Card/Card.js","components/Card/Pagination.js","components/Card/CardContainer.js","contexts/postsdata.js"],"names":["Card","id","tagHandler","postsData","useContext","PostsData","link","markdown","preloadRouteComponent","path","component","routes","matchingRoute","find","route","matchPath","exact","findComponentForRoute","preload","className","to","onMouseOver","title","description","tags","map","tag","onClick","Pagination","currentPage","postCount","pageSize","pageHandler","pageCount","Math","ceil","pages","_","range","page","style","cursor","onMouseDown","CardContainer","useState","setTag","setCurrentPage","Object","values","slice","pagedPosts","setPagedPosts","length","setPostCount","pageNum","t","d","pickBy","post","includes","items","startIndex","take","value","TagList","tagSet","Set","key","forEach","add","tList","Array","from","createContext"],"mappings":"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","file":"static/js/4.8e33ef89.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport './Card.scss';\r\nimport { Link, matchPath } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport PostsData from 'src/contexts/postsdata';\r\n\r\nconst Card = ({id, tagHandler}) => {\r\n    const postsData = useContext(PostsData);\r\n    const link = '/' + postsData[id].markdown;\r\n\r\n    const findComponentForRoute = (path, routes) => {\r\n        const matchingRoute = routes.find(route =>\r\n            matchPath(path, {\r\n            path: route.path,\r\n            exact: route.exact\r\n            })\r\n        );\r\n    \r\n        return matchingRoute ? matchingRoute.component : null;\r\n    };\r\n\r\n    const preloadRouteComponent = (path) => {\r\n        const component = findComponentForRoute(path, routes);\r\n        if (component && component.preload) {\r\n            component.preload();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <Link to={link} className=\"link\" onMouseOver={() => preloadRouteComponent(link)}>{postsData[id].title}</Link>\r\n            <p>{postsData[id].description}</p>\r\n            <div className=\"card-tags\">\r\n                {\r\n                    postsData[id].tags.map((tag) => (\r\n                        <div key={tag} className=\"card-tag\" onClick={() => tagHandler(tag)}>{tag}</div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport './Pagination.scss';\r\n\r\nconst Pagination = ({currentPage, postCount, pageSize, pageHandler}) => {\r\n    const pageCount = Math.ceil(postCount / pageSize);\r\n    \r\n    if (pageCount === 1) {\r\n        return null;\r\n    }\r\n\r\n    const pages = _.range(1, pageCount + 1);\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            {\r\n                pages.map(page=> (\r\n                    <div\r\n                        key={`pagination-${page}`}\r\n                        className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n                        style={{ cursor: \"pointer\" }}\r\n                    >\r\n                        <div className=\"page-link\" onMouseDown={() => pageHandler(page)}>{page}</div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React, { useState, useContext } from 'react';\r\nimport Card from './Card';\r\nimport Pagination from './Pagination';\r\nimport PostsData from 'src/contexts/postsdata';\r\n\r\nimport './CardContainer.scss';\r\nimport _ from 'lodash';\r\n\r\nconst CardContainer = () => {\r\n    const pageSize = 8;\r\n    const postsData = useContext(PostsData);\r\n    const [tag, setTag] = useState('all');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [pagedPosts, setPagedPosts] = useState(Object.values(postsData).slice(0, pageSize));\r\n    const [postCount, setPostCount] = useState(Object.values(postsData).length);\r\n\r\n    const pageHandler = (pageNum, t=tag) => {\r\n        const d = _.pickBy(postsData, (post) => t === 'all' || post.tags.includes(t));\r\n        const items = Object.values(d);\r\n        const startIndex = (pageNum - 1) * pageSize;\r\n        setPostCount(items.length);\r\n        setPagedPosts(\r\n            _(items)\r\n            .slice(startIndex)\r\n            .take(pageSize)\r\n            .value()\r\n        );\r\n        setCurrentPage(pageNum);\r\n        setTag(t);\r\n    }\r\n\r\n    const tagHandler = (t) => {\r\n        pageHandler(1, t);\r\n    }\r\n\r\n    const TagList = () => {\r\n        const tagSet = new Set(['all']);\r\n        for (let key in postsData) {\r\n            postsData[key].tags.forEach(t => tagSet.add(t));\r\n        }\r\n        const tList = Array.from(tagSet);\r\n        return (\r\n            <div key={\"main-tags-key\"} className=\"tags\">\r\n                {tList.map((t) => (\r\n                    <div key={t} className=\"tag\" onClick={() => {pageHandler(1, t)}}>{t}</div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            <TagList />\r\n            <h2 key={\"main-tag-key\"}>{tag} ({postCount})</h2>\r\n            {pagedPosts.map((post) => (\r\n                <Card key={post.id} id={post.markdown} tagHandler={tagHandler}/>\r\n            ))}\r\n            <Pagination key=\"pagenation\" currentPage={currentPage} postCount={postCount} pageSize={pageSize} pageHandler={pageHandler}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardContainer;","import { createContext } from 'react';\r\nimport postsData from 'src/posts/posts.json';\r\n\r\nconst PostsData = createContext(postsData);\r\n\r\nexport default PostsData;"],"sourceRoot":""}